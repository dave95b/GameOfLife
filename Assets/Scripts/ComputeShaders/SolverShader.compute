// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#define tgX 64
#define tgY 1
#define threadsInGroup tgX * tgY
#define stepsPerThread 208


RWStructuredBuffer<uint> CurrentGS, ResultGS;
uint Width, Height;

int GetNeighbourCount(int x, int y)
{
	return CurrentGS[x - 1 + (y - 1) * Width]
		+ CurrentGS[x + (y - 1) * Width]
		+ CurrentGS[x + 1 + (y - 1) * Width]
		+ CurrentGS[x - 1 + y * Width]
		+ CurrentGS[x + 1 + y * Width]
		+ CurrentGS[x - 1 + (y + 1) * Width]
		+ CurrentGS[x + (y + 1) * Width]
		+ CurrentGS[x + 1 + (y + 1) * Width];
}

int GetNeighbourCount(int i)
{
	return CurrentGS[i - 1 - Width]
		+ CurrentGS[i - Width]
		+ CurrentGS[i + 1 - Width]
		+ CurrentGS[i - 1]
		+ CurrentGS[i + 1]
		+ CurrentGS[i - 1 + Width]
		+ CurrentGS[i + Width]
		+ CurrentGS[i + 1 + Width];
}

[numthreads(tgX,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	uint i = Width + 1 + id.x;
	int count = GetNeighbourCount(i);
	ResultGS[i] = (count == 3) | (count == 2 && CurrentGS[i] == 1);
}
